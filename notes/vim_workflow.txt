-----------------------------------------------------------------------------
 NOTES
-----------------------------------------------------------------------------
easymotion: <leader><leader>w
nerdcommenter:
comment out current line or selected text: <leader>cc
comment out selected text with block     : <leader>cs
uncomments selected lines                : <leader>cu
comment out current lines but yank first : <leader>cy
toggle comments on selected lines        : <leader>c<space>

:setlocal foldmethod=syntax
create fold: zf {motion}
open   fold: zo
delete fold: zd

set foldmethod=indent   
set foldnestmax=10
set nofoldenable
set foldlevel=2

* AG
use ag         : <leader> a
open in new tab: t
open in horiz  : h
open in vert   : v

--- General ---
* to setup the correct tab spacing for a file:
    set shiftwidth=2 tabstop=2 softtabstop=2

* add to .bashrc:
    set -o vi

* add to .inputrc
    set editing-mode vi
    set keymap vi (or set keymap vi-command)
    https://vim.fandom.com/wiki/Use_vi_shortcuts_in_terminal

--- VIM ---
copy to system clipboard in Vim: "+y
copy to selection clipboard in Vim: "*y
paste selection to tmux: shift + insert

:sp  - horizontal split
:vsp - vertical split

C-w + t, C-w K  - change two vertically split windows to horizontally split
C-w + t, C-w H  - horizontally to vertically

"*y             - copy to selection buffer (eg: middle clicking on mouse)
Shift+Insert    - paste selection to tmux pane

"+y             - copy to clipboard buffer
Ctrl+Shift+v    - paste selection anywhere

access register x   : "r
yank text to reg x  : "xy
paste contents of x : "xp 

in insert/command mode : <Ctrl-r> + x
to see contents of regs: ":reg" or to filer: ":reg a b c"

registers 0-9 are autopopulated when text deleted

read only registers:
last inserted text: ".
current file path : "%
most recent cmd   : ":

--- NERDTREE ---

t - open file in new tab
i - open file in horizontal split
s - open file in vertical split
I - toggle hidden files
m - show nerdtree menu
R - refresh the tree
? - nerdtree help
u - go up a directory

--- CTRL-P --- 
<cr> - open file in current window is possible
<c-t> - open file in new tab
<c-v> - open file in vertical split
<c-s> - open file in horizontal split

Opening multiple files:
<c-z> - mark/unmark file to be opened with <c-o>

:CtrlPClearAllCaches - if files aren't showing up in Ctrl-P, clear the cache

--- MINIBUFEXPLORER ---
s - open selected buffer in horizontal split
v - open selected buffer in vertical split
d - delete selected buffer

:MBEToggle[!] 

--- TAGBAR ---
<space> - display the prototype of the current tag in the command line

--- STARTIFY ---
:SLoad - load a session
:SSave - save a session
:SDelete - delete a session
:SClose - close a session

--- SUPERTAB ---
<c-tab> - bypasses tab completion for a real tab insertion

--- TMUX ---

C-b             : default prefix

C-b %           : split vertical
C-b "           : split horizontal
C-b <arrow key> : switch pane

C-b ?               : show commands

C-b z               : full screen a pane. again to shrink it back
C-b C-<arrow key>   : resize pane in direction of <arrow key>
C-b ,               : rename the current window

prefix + I               : install plugins

tmux source ~/.tmux.conf

prefix + Ctrl-s - save
prefix + Ctrl-r - restore

Ctrl+Q            : renable flow control (if accidentally press Ctrl+S, freezes vim)

prefix + enter      : change layout

prefix + '          : goto window name
prefix + ,          : rename window
prefix + c          : create new window
prefix + p/n        : switch to previous/next window
prefix + <number>   : swtich to window <number>
prefix + &          : kill current window

C-d                 : kill pane
prefix + d          : detach session
prefix + D          : detach specific session

tmux ls                         : show sessions
tmux attach -t <session>        : attach to session
tmux new -s <name>              : create new session with <name>
tmux rename-session -t 0 <name> : rename session 0 to <name>

:swap-window -s 3 -t 2           : swaps windows 2 and 3

--- vi mode ---
prefix + [          : enter vi mode (must be done before below commands)
space               : copy highlighted text 
enter               : exit vi mode
prefix + ]          : paste buffer contents

--- GENERAL ---
TABS:
Cleaning up tabs in a file -
  * expandtab must be set for this to work
    to convert existing buffer according to tab/space settings in .vimrc:
      :retab

Windows:
"<c-w> =" make all windows equal size
<leader>ww - swap windows

:e opens file
:b opens buffer
:bd deletes buffer

:sp    - open file split
:vs

:sb buffer-name       - open buffer horizontal split
:vert sb buffer-name  - open buffer vertical split

Toggle between last buffers:
Ctrl-^    

[{ - jump to beginning of code block
]} - jump to end of code block

Using registers:
"ayw  - yank the selected word into register a
"ap   - paste contents of register a

Edit multiple lines at once (eg commenting);:
<c-V> to go into visual block mode
<s-I> - vim will go into insert mode and cursor at first char of first line. Type // (or any char)
<Esc>

to delete comments:
<c-V> and then <x>


--- Key Representations for Mappings ---
Ctrl-I      Tab
Ctrl-[      Esc
Ctrl-M      Enter
Ctrl-H      Backspace

<BS>           Backspace
<Tab>          Tab
<CR>           Enter
<Enter>        Enter
<Return>       Enter
<Esc>          Escape
<Space>        Space
<Up>           Up arrow
<Down>         Down arrow
<Left>         Left arrow
<Right>        Right arrow
<F1> - <F12>   Function keys 1 to 12
#1, #2..#9,#0  Function keys F1 to F9, F10
<Insert>       Insert
<Del>          Delete
<Home>         Home
<End>          End
<PageUp>       Page-Up
<PageDown>     Page-Down
<bar>          the '|' character, which otherwise needs to be escaped '\|'
